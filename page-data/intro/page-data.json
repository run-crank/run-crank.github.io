{"componentChunkName":"component---src-templates-doc-template-js","path":"/intro","webpackCompilationHash":"ceb0dc4016c975f424f3","result":{"data":{"pageContent":{"frontmatter":{"section":"intro","path":"/intro","title":"Introduction"},"headings":[{"value":"Getting Set Up"},{"value":"Writing Your First Scenario"},{"value":"Running Your Scenario"}],"html":"<p>Crank is a BDD test automation framework for validating workflows, apps, and\nexperiences that are at least partially defined, configured, or built in a SaaS\nplatform.</p>\n<p>It's never been easier to create complex customer experiences and data flows\nwithout having to write a single line of code. Crank aims to make it just as\neasy to validate that those experiences actually work.</p>\n<p>Put succinctly:</p>\n<ul>\n<li><strong>Crank</strong> is a CLI tool for running test scenarios and Cogs.</li>\n<li><strong>Cogs</strong> are a standard way to encapsulate actions and validations for SaaS\nplatforms, exposing them as composable steps.</li>\n<li><strong>Scenarios</strong> are a way to describe the order and substance of steps to be\nexecuted across any number of Cogs.</li>\n</ul>\n<hr>\n<h2 id=\"getting-set-up\"><a href=\"#getting-set-up\" aria-label=\"getting set up permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Set Up</h2>\n<p><strong>Open up your terminal and install Crank.</strong></p>\n<pre><code class=\"language-shell-session\">$ curl -s https://get.crank.run/install.sh | sh\n$ crank -v\ncrank/x.y.z darwin-x64 node-vA.B.C\n\n$ docker -v\nDocker version j.k.l, build 123xyz\n</code></pre>\n<p>Validate that it was installed successfully by running <code>crank -v</code>, and make\nsure Docker is installed by running <code>docker -v</code>.</p>\n<p>Further details on installation can be found on the <a href=\"/intro/install\">installation</a>\npage.</p>\n<p><strong>Install a couple of Cogs</strong></p>\n<pre><code class=\"language-shell-session\">$ crank cog:install automatoninc/web\n$ crank registry:steps\n</code></pre>\n<p>A Cog is just a Docker container; the above command installs a container\nencapsulating steps for performing basic actions in a web browser. You can\nvalidate that the Cog was installed correctly by running <code>crank registry:steps</code>.\nYou should see output like the following:</p>\n<pre><code class=\"language-shell-session\">System     Expression                                               \nA Browser  fill out (?&#x3C;domQuerySelector>.+) with (?&#x3C;value>.+)       \nA Browser  navigate to (?&#x3C;webPageUrl>.+)                            \nA Browser  submit the form by clicking (?&#x3C;domQuerySelector>.+)  \n</code></pre>\n<p>Looking for more Cogs?</p>\n<p><a class=\"btn btn-secondary\" role=\"button\" href=\"/discover-cogs\">Discover More Cogs Here</a></p>\n<hr>\n<h2 id=\"writing-your-first-scenario\"><a href=\"#writing-your-first-scenario\" aria-label=\"writing your first scenario permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Writing Your First Scenario</h2>\n<p>A Scenario file is just a <code>yaml</code> file adhering to a specific format. If you've\ndone BDD before, it should look pretty familiar.</p>\n<p>Copy this scenario and save it somewhere on your computer, naming it something\nlike <code>my-first-scenario.crank.yml</code>:</p>\n<pre><code class=\"language-yml\">scenario: Your First Scenario\ndescription: This scenario demonstrates the basics of Crank scenario files.\n\nsteps:\n- step: Navigate to https://www.example.com/contact\n- step: Fill out input[name=\"EmailAddress\"] with test@example.com\n- step: Submit the form by clicking button[type=\"submit\"]\n</code></pre>\n<p><strong>Metadata</strong></p>\n<p>At a minimum, you'll want to define a name for your scenario on the\n<strong>scenario</strong> key. You should also provide a <strong>description</strong>, documenting the\nintention behind your scenario.</p>\n<p><strong>Steps</strong></p>\n<p>Next, you'll see <strong>steps</strong>, which is a list of steps to execute. You'll notice\nthe <strong>step</strong> text looks quite familiar: each string matches a step expression\nfrom the list you printed to your console earlier when you ran\n<code>crank registry:steps</code>.</p>\n<p>As you install more Cogs, that command will return more steps for you to use in\nyour scenario files. Find more info by running</p>\n<pre><code class=\"language-shell-session\">$ crank registry:steps --help\n</code></pre>\n<hr>\n<h2 id=\"running-your-scenario\"><a href=\"#running-your-scenario\" aria-label=\"running your scenario permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running Your Scenario</h2>\n<p>Execute the scenario file you saved to your computer using the <code>crank run</code>\ncommand.</p>\n<pre><code class=\"language-shell-session\">$ crank run path/to/your/scenario.yml\n\nYour First Scenario\n\n  ✓ Navigate to https://www.example.com/contact\n  ✘ Fill out input[name=\"EmailAddress\"] with test@example.com\n\n    There was a problem filling out input[name=\"EmailAddress\"] with\n    test@example.com: Error: ...\n\n  ✀  Submit the form by clicking button[type=\"submit\"]\n\n\n1 passing (1.20s)\n1 failing\n1 skipped\n</code></pre>\n<p>...Naturally, since there is no Contact Us form on <code>example.com</code>, your first\nscenario will fail. But the point wasn't to get a passing scenario, it was to\nunderstand how to use Crank!</p>\n<p><a class=\"btn btn-secondary mb-2\" role=\"button\" href=\"/intro/scenarios\">Learn More About Scenarios</a>\n<a class=\"btn btn-outline-secondary mb-2\" role=\"button\" href=\"/discover-cogs\">Find Cogs for Your Stack</a>\n<a class=\"btn btn-outline-secondary mb-2\" role=\"button\" href=\"https://crank.automatoninc.com\">Build a Cog</a></p>"},"navBar":{"edges":[{"node":{"frontmatter":{"path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"path":"/intro/install","title":"Installation"}}},{"node":{"frontmatter":{"path":"/intro/scenarios","title":"Scenarios"}}},{"node":{"frontmatter":{"path":"/intro/community","title":"Community"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"section":"intro"}}}