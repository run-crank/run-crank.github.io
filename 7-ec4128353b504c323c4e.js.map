{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es6.string.anchor.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/github-slugger/index.js","webpack:///./node_modules/github-slugger/node_modules/emoji-regex/index.js","webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/prismjs/components/prism-bash.js","webpack:///./node_modules/prismjs/components/prism-shell-session.js","webpack:///./node_modules/prismjs/components/prism-yaml.js"],"names":["global","__webpack_require__","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","this","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","it","keys","i","length","createHTML","name","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","emoji","BananaSlug","own","Object","hasOwnProperty","whitespace","specials","reset","slug","maintainCase","trim","slugger","originalSlug","occurrences","create","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","o","toString","slice","objId","obj","defineProperty","clone","deepClone","visited","id","forEach","v","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","document","container","env","selector","hooks","run","element","elements","querySelectorAll","highlightElement","language","parent","className","parentNode","match","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","flags","pos","str","lastIndex","from","to","k","len","delNum","after","args","push","wrapped","splice","apply","rest","all","add","callbacks","matchedStr","join","classes","attributes","aliases","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","xml","html","mathml","svg","css","atrule","rule","url","function","important","addInlined","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","parameter","constant","template-string","template-punctuation","interpolation","interpolation-punctuation","js","querySelector","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","tex","pre","getAttribute","extension","createElement","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","setAttribute","statusText","send","toolbar","registerButton","a","href","envVars","insideString","environment","variable","bash","shebang","function-name","for-or-select","assign-left","builtin","file-descriptor","toBeCopied","shell","command","output","yaml","scalar","directive","datetime","null","yml"],"mappings":"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","file":"7-ec4128353b504c323c4e.js","sourcesContent":["var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nvar emoji = require('emoji-regex');\n\nmodule.exports = BananaSlug;\nvar own = Object.hasOwnProperty;\nvar whitespace = /\\s/g;\nvar specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g;\n\nfunction BananaSlug() {\n  var self = this;\n  if (!(self instanceof BananaSlug)) return new BananaSlug();\n  self.reset();\n}\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\n\n\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  var self = this;\n  var slug = slugger(value, maintainCase === true);\n  var originalSlug = slug;\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++;\n    slug = originalSlug + '-' + self.occurrences[originalSlug];\n  }\n\n  self.occurrences[slug] = 0;\n  return slug;\n};\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\n\n\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null);\n};\n\nfunction slugger(string, maintainCase) {\n  if (typeof string !== 'string') return '';\n  if (!maintainCase) string = string.toLowerCase();\n  return string.trim().replace(specials, '').replace(emoji(), '').replace(whitespace, '-');\n}","module.exports = function () {\n  return /[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uD83C\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uD83C\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uD83C\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF8\\uDDFE\\uDDFF]|\\uD83C\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uD83C\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uD83C\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uD83C\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uD83C\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uD83C\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uD83C\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uD83C\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uD83C\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uD83C\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uD83C\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uD83C\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uD83C\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uD83C\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|[#\\*0-9]\\u20E3/g;\n};","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function deepClone(o, visited) {\n        var clone,\n            id,\n            type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return clone;\n\n          default:\n            return o;\n        }\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need an object and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n                propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      var elements = container.querySelectorAll(env.selector);\n\n      for (var i = 0, element; element = elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = 'none',\n          grammar,\n          parent = element;\n\n      while (parent && !lang.test(parent.className)) {\n        parent = parent.parentNode;\n      }\n\n      if (parent) {\n        language = (parent.className.match(lang) || [, 'none'])[1].toLowerCase();\n        grammar = _.languages[language];\n      } // Set language on the element, if not present\n\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n      if (element.parentNode) {\n        // Set language on the parent, for styling\n        parent = element.parentNode;\n\n        if (/pre/i.test(parent.nodeName)) {\n          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        }\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      var insertHighlightedCode = function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      };\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    tokenize: function tokenize(text, grammar) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    },\n    hooks: {\n      all: {},\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n\n  function Token(type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  }\n\n  Token.stringify = function (o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      return o.map(function (element) {\n        return Token.stringify(element, language);\n      }).join('');\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n\n    if (o.alias) {\n      var aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }).join(' ');\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } //Get current script and highlight\n\n\n  var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (!_.manual && !script.hasAttribute('data-manual')) {\n      if (document.readyState !== \"loading\") {\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(_.highlightAll);\n        } else {\n          window.setTimeout(_.highlightAll, 16);\n        }\n      } else {\n        document.addEventListener('DOMContentLoaded', _.highlightAll);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n    return;\n  }\n  /**\n   * @param {Element} [container=document]\n   */\n\n\n  self.Prism.fileHighlight = function (container) {\n    container = container || document;\n    var Extensions = {\n      'js': 'javascript',\n      'py': 'python',\n      'rb': 'ruby',\n      'ps1': 'powershell',\n      'psm1': 'powershell',\n      'sh': 'bash',\n      'bat': 'batch',\n      'h': 'c',\n      'tex': 'latex'\n    };\n    Array.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n      // ignore if already loaded\n      if (pre.hasAttribute('data-src-loaded')) {\n        return;\n      } // load current\n\n\n      var src = pre.getAttribute('data-src');\n      var language,\n          parent = pre;\n      var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n      while (parent && !lang.test(parent.className)) {\n        parent = parent.parentNode;\n      }\n\n      if (parent) {\n        language = (pre.className.match(lang) || [, ''])[1];\n      }\n\n      if (!language) {\n        var extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n        language = Extensions[extension] || extension;\n      }\n\n      var code = document.createElement('code');\n      code.className = 'language-' + language;\n      pre.textContent = '';\n      code.textContent = 'Loading…';\n      pre.appendChild(code);\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', src, true);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status < 400 && xhr.responseText) {\n            code.textContent = xhr.responseText;\n            Prism.highlightElement(code); // mark as loaded\n\n            pre.setAttribute('data-src-loaded', '');\n          } else if (xhr.status >= 400) {\n            code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n          } else {\n            code.textContent = '✖ Error: File does not exist or is empty';\n          }\n        }\n      };\n\n      xhr.send(null);\n    });\n\n    if (Prism.plugins.toolbar) {\n      Prism.plugins.toolbar.registerButton('download-file', function (env) {\n        var pre = env.element.parentNode;\n\n        if (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n          return;\n        }\n\n        var src = pre.getAttribute('data-src');\n        var a = document.createElement('a');\n        a.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n        a.setAttribute('download', '');\n        a.href = src;\n        return a;\n      });\n    }\n  };\n\n  document.addEventListener('DOMContentLoaded', function () {\n    // execute inside handler, for dropping Event as argument\n    self.Prism.fileHighlight();\n  });\n})();","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);","Prism.languages['shell-session'] = {\n  'command': {\n    pattern: /\\$(?:[^\\r\\n'\"<]|([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1|((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*(?:\\r\\n?|\\n)(?:[\\s\\S])*?(?:\\r\\n?|\\n)\\3)+/,\n    inside: {\n      'bash': {\n        pattern: /(\\$\\s*)[\\s\\S]+/,\n        lookbehind: true,\n        alias: 'language-bash',\n        inside: Prism.languages.bash\n      },\n      'sh': {\n        pattern: /^\\$/,\n        alias: 'important'\n      }\n    }\n  },\n  'output': {\n    pattern: /.(?:.*(?:\\r\\n?|\\n|.$))*/ // output highlighting?\n\n  }\n};","Prism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nPrism.languages.yml = Prism.languages.yaml;"],"sourceRoot":""}