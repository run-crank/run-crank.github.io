{"version":3,"sources":["webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/prismjs/components/prism-bash.js","webpack:///./node_modules/prismjs/components/prism-shell-session.js"],"names":["global","__webpack_require__","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","document","container","env","selector","hooks","run","element","elements","querySelectorAll","highlightElement","language","parent","test","className","parentNode","match","toLowerCase","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","length","pattern","lookbehind","greedy","lookbehindLength","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","after","args","push","wrapped","splice","apply","rest","all","add","name","callbacks","matchedStr","join","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","xml","html","mathml","svg","string","css","atrule","rule","url","function","important","addInlined","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","parameter","constant","template-string","template-punctuation","interpolation","interpolation-punctuation","js","querySelector","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","tex","pre","getAttribute","extension","createElement","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","setAttribute","statusText","send","toolbar","registerButton","a","href","envVars","insideString","environment","variable","bash","shebang","function-name","for-or-select","assign-left","builtin","file-descriptor","toBeCopied","shell","command","output"],"mappings":"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","file":"2-f08ace95171b9329a5a8.js","sourcesContent":["require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function deepClone(o, visited) {\n        var clone,\n            id,\n            type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return clone;\n\n          default:\n            return o;\n        }\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need an object and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n                propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      var elements = container.querySelectorAll(env.selector);\n\n      for (var i = 0, element; element = elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = 'none',\n          grammar,\n          parent = element;\n\n      while (parent && !lang.test(parent.className)) {\n        parent = parent.parentNode;\n      }\n\n      if (parent) {\n        language = (parent.className.match(lang) || [, 'none'])[1].toLowerCase();\n        grammar = _.languages[language];\n      } // Set language on the element, if not present\n\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n      if (element.parentNode) {\n        // Set language on the parent, for styling\n        parent = element.parentNode;\n\n        if (/pre/i.test(parent.nodeName)) {\n          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        }\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      var insertHighlightedCode = function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      };\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    tokenize: function tokenize(text, grammar) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    },\n    hooks: {\n      all: {},\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n\n  function Token(type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  }\n\n  Token.stringify = function (o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      return o.map(function (element) {\n        return Token.stringify(element, language);\n      }).join('');\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n\n    if (o.alias) {\n      var aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }).join(' ');\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } //Get current script and highlight\n\n\n  var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (!_.manual && !script.hasAttribute('data-manual')) {\n      if (document.readyState !== \"loading\") {\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(_.highlightAll);\n        } else {\n          window.setTimeout(_.highlightAll, 16);\n        }\n      } else {\n        document.addEventListener('DOMContentLoaded', _.highlightAll);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n    return;\n  }\n  /**\n   * @param {Element} [container=document]\n   */\n\n\n  self.Prism.fileHighlight = function (container) {\n    container = container || document;\n    var Extensions = {\n      'js': 'javascript',\n      'py': 'python',\n      'rb': 'ruby',\n      'ps1': 'powershell',\n      'psm1': 'powershell',\n      'sh': 'bash',\n      'bat': 'batch',\n      'h': 'c',\n      'tex': 'latex'\n    };\n    Array.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n      // ignore if already loaded\n      if (pre.hasAttribute('data-src-loaded')) {\n        return;\n      } // load current\n\n\n      var src = pre.getAttribute('data-src');\n      var language,\n          parent = pre;\n      var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n      while (parent && !lang.test(parent.className)) {\n        parent = parent.parentNode;\n      }\n\n      if (parent) {\n        language = (pre.className.match(lang) || [, ''])[1];\n      }\n\n      if (!language) {\n        var extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n        language = Extensions[extension] || extension;\n      }\n\n      var code = document.createElement('code');\n      code.className = 'language-' + language;\n      pre.textContent = '';\n      code.textContent = 'Loading…';\n      pre.appendChild(code);\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', src, true);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status < 400 && xhr.responseText) {\n            code.textContent = xhr.responseText;\n            Prism.highlightElement(code); // mark as loaded\n\n            pre.setAttribute('data-src-loaded', '');\n          } else if (xhr.status >= 400) {\n            code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n          } else {\n            code.textContent = '✖ Error: File does not exist or is empty';\n          }\n        }\n      };\n\n      xhr.send(null);\n    });\n\n    if (Prism.plugins.toolbar) {\n      Prism.plugins.toolbar.registerButton('download-file', function (env) {\n        var pre = env.element.parentNode;\n\n        if (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n          return;\n        }\n\n        var src = pre.getAttribute('data-src');\n        var a = document.createElement('a');\n        a.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n        a.setAttribute('download', '');\n        a.href = src;\n        return a;\n      });\n    }\n  };\n\n  document.addEventListener('DOMContentLoaded', function () {\n    // execute inside handler, for dropping Event as argument\n    self.Prism.fileHighlight();\n  });\n})();","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);","Prism.languages['shell-session'] = {\n  'command': {\n    pattern: /\\$(?:[^\\r\\n'\"<]|([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1|((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*(?:\\r\\n?|\\n)(?:[\\s\\S])*?(?:\\r\\n?|\\n)\\3)+/,\n    inside: {\n      'bash': {\n        pattern: /(\\$\\s*)[\\s\\S]+/,\n        lookbehind: true,\n        alias: 'language-bash',\n        inside: Prism.languages.bash\n      },\n      'sh': {\n        pattern: /^\\$/,\n        alias: 'important'\n      }\n    }\n  },\n  'output': {\n    pattern: /.(?:.*(?:\\r\\n?|\\n|.$))*/ // output highlighting?\n\n  }\n};"],"sourceRoot":""}